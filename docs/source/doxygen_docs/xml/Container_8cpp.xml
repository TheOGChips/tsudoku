<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Container_8cpp" kind="file" language="C++">
    <compoundname>Container.cpp</compoundname>
    <includes local="yes">Container.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/chris/Documents/tsudoku/src/Container.cpp</label>
        <link refid="Container_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Container.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Container.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Name:<sp/>Class<sp/>Constructor<sp/>(default)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>Initializes<sp/>internal<sp/>array<sp/>to<sp/>all<sp/>&apos;?&apos;.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Parameters:<sp/>None</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">Container::Container<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>CONTAINER_SIZE;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_value(i,<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Name:<sp/>Class<sp/>Constructor</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>Initializes<sp/>internal<sp/>array<sp/>to<sp/>the<sp/>same<sp/>values<sp/>as<sp/>it&apos;s<sp/>array<sp/>parameter.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Parameters:</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>arr<sp/>-&gt;<sp/>Integer<sp/>array<sp/>of<sp/>Sudoku<sp/>numbers<sp/>or<sp/>?s.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">Container::Container<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>ARR[CONTAINER_SIZE])<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>CONTAINER_SIZE;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_value(i,<sp/>ARR[i]);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>Name:<sp/>at</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>Retrieves<sp/>a<sp/>value<sp/>from<sp/>the<sp/>internal<sp/>array.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>Parameters:</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>-&gt;<sp/>Integer<sp/>index<sp/>of<sp/>internal<sp/>array<sp/>that<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">uint8_t<sp/>Container::at<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>INDEX)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arr[INDEX];</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Name:<sp/>Operator<sp/>[]<sp/>(overloaded)</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>Retrieves<sp/>a<sp/>value<sp/>from<sp/>the<sp/>internal<sp/>array.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Parameters:</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INDEX<sp/>-&gt;<sp/>Integer<sp/>index<sp/>of<sp/>internal<sp/>array<sp/>that<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">uint8_t<sp/>Container::operator<sp/>[]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>INDEX)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at(INDEX);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Name:<sp/>value_exists</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>Checks<sp/>whether<sp/>a<sp/>value<sp/>1-9<sp/>already<sp/>exists<sp/>in<sp/>the<sp/>internal<sp/>array.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Parameters:</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>VALUE<sp/>-&gt;<sp/>Integer<sp/>value<sp/>that<sp/>is<sp/>searched<sp/>for<sp/>in<sp/>the<sp/>container&apos;s<sp/>internal<sp/>array.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Container::value_exists<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>VALUE)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>CONVERTED<sp/>=<sp/>(VALUE<sp/>==<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">)<sp/>?<sp/>VALUE<sp/>:<sp/>VALUE<sp/>+<sp/>ZERO;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>CONTAINER_SIZE;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(at(i)<sp/>==<sp/>CONVERTED)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>Name:<sp/>set_value</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>Sets<sp/>an<sp/>element<sp/>of<sp/>the<sp/>internal<sp/>array<sp/>to<sp/>a<sp/>specfic<sp/>value<sp/>1-9.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>Parameters:</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INDEX<sp/>-&gt;<sp/>Integer<sp/>index<sp/>of<sp/>the<sp/>internal<sp/>array</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>VALUE<sp/>-&gt;<sp/>Integer<sp/>value<sp/>to<sp/>be<sp/>placed<sp/>into<sp/>the<sp/>internal<sp/>array</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Container::set_value<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>INDEX,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>VALUE)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>arr[INDEX]<sp/>=<sp/>VALUE;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>Name:<sp/>evaluate</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>Evaluates<sp/>whether<sp/>the<sp/>container&apos;s<sp/>internal<sp/>array<sp/>values<sp/>are<sp/>valid<sp/>for<sp/>a<sp/>solved<sp/>sudoku</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puzzle<sp/>(i.e.<sp/>exactly<sp/>one<sp/>each<sp/>of<sp/>the<sp/>values<sp/>1-9<sp/>in<sp/>the<sp/>array).</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>Parameters:<sp/>None</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Container::evaluate()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_exists(</highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>CONTAINER_SIZE;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>value_exists(i))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/chris/Documents/tsudoku/src/Container.cpp"/>
  </compounddef>
</doxygen>
